name: Test Action-Terraform

on: [push]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:

  tests_matrix:
    runs-on: ubuntu-latest
    name: t
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: 
        init: [ "", "yes", "no" ]
        verb: [ "", apply, destroy, plan ]
        varsFile: [ "", "noexist", "default.tfvars" ]
        planFile: [ "", tfplan ]
        keyGen: [ "" ]
        exclude:
          - varsFile: noexist
          - keyGen: invalid
          - keyGen: rsa
          - keyGen: ed25519          
        include:
          - expectedResult: success

          - init: "no"
            expectedResult: failure

          - verb: "destroy"
            varsFile: ""
            expectedResult: failure

          - verb: "apply"
            varsFile: ""
            planFile: ""
            expectedResult: failure

          - verb: "plan"
            varsFile: ""
            expectedResult: failure

          - verb: ""
            varsFile: ""
            planFile: ""
            expectedResult: failure

          - varsFile: "noexist"
            expectedResult: failure
            
          - keyGen: invalid
            expectedResult: failure
          - keyGen: rsa
            expectedResult: success
          - keyGen: ed25519
            expectedResult: success

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - name: Update image for test
        run: |
          sed -i 's|docker.io/labratswork/ops-images-terraform-action|Dockerfile|' action.yml
      - name: Create and load keyfile for test.
        run: |          
          if [ "${{ matrix.keyGen }}" = "invalid" ]
          then
            echo 'KEYFILE<<EOF' >> $GITHUB_ENV
            echo $RANDOM >> $GITHUB_ENV
            echo EOF >> $GITHUB_ENV
          else
            ssh-keygen -t ${{ matrix.keyGen }} -N '' -f id_${{ matrix.keyGen }}
            xargs -a id_${{ matrix.keyGen }} -I{} -d'\n' echo ::add-mask::{}
            echo "Loading keyfile \"${{ matrix.keyGen }}\" into GITHUB_ENV."
            echo 'KEYFILE<<EOF' >> $GITHUB_ENV
            cat id_${{ matrix.keyGen }} >> $GITHUB_ENV
            echo EOF >> $GITHUB_ENV
          fi
        if: matrix.keyGen != ''
      - name: Run test for ${{ matrix.test }}
        uses: ./
        id: test
        continue-on-error: true
        with:
          chdir: "/tests/default"
          init: ${{ matrix.init || 'yes' }}
          varsFile: ${{ matrix.varsFile }}
          planFile: ${{ matrix.planFile }}
          verb: ${{ matrix.verb || 'apply' }}
          sshKey: ${{ env.KEYFILE }}
      - name: Assert test ${{ matrix.test }}
        if: always()
        run: |
          [ "${{ matrix.expectedResult }}" == "${{ steps.test.outcome }}" ] && exit 0
          exit 1