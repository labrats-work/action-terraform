on: [push]

jobs:

  tests_default:
    runs-on: ubuntu-latest
    name: Terraform action tests.  
    steps:
      - uses: actions/checkout@v3
      - name: default
        id: test_default
        uses: ./
        with:
          workingDirectory: "/tests/default"

  tests_init:
    runs-on: ubuntu-latest
    name: Terraform init tests.    
    strategy:
      fail-fast: false
      matrix: 
        test: [ init ]
        keyFile: [ "", "yes" ]
        include:
          - expectedResult: success
          - keyFile: ""
            expectedResult: "failure"

    steps:
      - uses: actions/checkout@v3
      - name: Run test for ${{ matrix.test }}
        uses: ./
        id: test
        continue-on-error: true
        with:
          workingDirectory: "/tests/${{ matrix.test }}"
          varsFile: default.tfvars
          verb: apply
          sshKey: ${{ env.KEYFILE }}
      - name: Assert test ${{ matrix.test }}
        if: always()
        run: |
          [ "${{ matrix.expectedResult }}" == "${{ steps.test.outcome }}" ] && exit 0
          exit 1

  tests_keyfile:
    runs-on: ubuntu-latest
    name: Terraform keyfile tests.    
    strategy:
      fail-fast: false
      matrix: 
        test: [ keyfile ]
        keyFile: [ "", id_invalid, id_rsa, id_ed25519 ]
        exclude:
          - test: keyfile
            keyfile: ''
        include:
          - expectedResult: success
          - varsFile: default.tfvars
          - verb: apply

          - test: keyfile
            keyfile: id_invalid
            expectedResult: failure

    steps:
      - uses: actions/checkout@v3
      - name: Load keyfile for test.
        run: |
          cd tests/${{ matrix.test }}
          if [ -f ${{ matrix.keyFile }} ]
          then
            xargs -a ${{ matrix.keyFile }} -I{} -d'\n' echo ::add-mask::{}
            echo "Loading keyfile \"${{ matrix.keyFile }}\" into GITHUB_ENV."
            echo 'KEYFILE<<EOF' >> $GITHUB_ENV
            cat ${{ matrix.keyFile }} >> $GITHUB_ENV
            echo EOF >> $GITHUB_ENV
          fi
        if: matrix.keyFile != ''
      - name: Run test for ${{ matrix.test }}
        uses: ./
        id: test
        continue-on-error: true
        with:
          workingDirectory: "/tests/${{ matrix.test }}"
          varsFile: ${{ matrix.varsFile }}
          verb: ${{ matrix.verb }}
          sshKey: ${{ env.KEYFILE }}
      - name: Assert test ${{ matrix.test }}
        if: always()
        run: |
          [ "${{ matrix.expectedResult }}" == "${{ steps.test.outcome }}" ] && exit 0
          exit 1